# Makefile for Windows

GOCMD=go
GOBUILD=$(GOCMD) build
GOCLEAN=$(GOCMD) clean
GOTEST=$(GOCMD) test
GOMOD=$(GOCMD) mod

AGENT_BINARY=fluidity-agent.exe
SERVER_BINARY=fluidity-server.exe
BUILD_DIR=build
AGENT_DIR=cmd/agent
SERVER_DIR=cmd/server

.PHONY: all build clean test deps run-agent-local run-server-local docker-build-agent docker-build-server build-linux-agent build-linux-server docker-build-agent-scratch docker-build-server-scratch

all: clean deps build

build: build-agent build-server

build-agent:
	@echo Building agent...
	@if not exist $(BUILD_DIR) mkdir $(BUILD_DIR)
	$(GOBUILD) -o $(BUILD_DIR)\$(AGENT_BINARY) ./$(AGENT_DIR)

build-server:
	@echo Building server...
	@if not exist $(BUILD_DIR) mkdir $(BUILD_DIR)
	$(GOBUILD) -o $(BUILD_DIR)\$(SERVER_BINARY) ./$(SERVER_DIR)

# Cross-compile static Linux binaries (useful for scratch-based images)
build-linux-agent:
	@echo Building agent for linux/amd64 (static)...
	set GOOS=linux&& set GOARCH=amd64&& set CGO_ENABLED=0&& $(GOBUILD) -o $(BUILD_DIR)\fluidity-agent ./$(AGENT_DIR)

build-linux-server:
	@echo Building server for linux/amd64 (static)...
	set GOOS=linux&& set GOARCH=amd64&& set CGO_ENABLED=0&& $(GOBUILD) -o $(BUILD_DIR)\fluidity-server ./$(SERVER_DIR)

clean:
	@echo Cleaning...
	@if exist $(BUILD_DIR) rmdir /s /q $(BUILD_DIR)

run-agent-local:
	@echo Running agent locally (local config)...
	$(GOBUILD) -o $(BUILD_DIR)\$(AGENT_BINARY) ./$(AGENT_DIR)
	$(BUILD_DIR)\$(AGENT_BINARY) --config ./configs/agent.local.yaml

run-server-local:
	@echo Running server locally (local config)...
	$(GOBUILD) -o $(BUILD_DIR)\$(SERVER_BINARY) ./$(SERVER_DIR)
	$(BUILD_DIR)\$(SERVER_BINARY) --config ./configs/server.local.yaml

deps:
	@echo Downloading dependencies...
	$(GOMOD) download
	$(GOMOD) tidy

test:
	@echo Running tests...
	$(GOTEST) -v ./...

fmt:
	@echo Formatting code...
	$(GOCMD) fmt ./...

docker-build-agent:
	@echo Building agent Docker image...
	docker build -t fluidity-agent -f deployments/agent/Dockerfile . || \
	(
		echo Fallback to scratch image build... && \
		$(MAKE) -f Makefile.win build-linux-agent && \
		docker build -t fluidity-agent -f deployments/agent/Dockerfile.scratch .
	)

docker-build-agent-scratch: build-linux-agent
	@echo Building agent Docker image (scratch)...
	docker build -t fluidity-agent -f deployments/agent/Dockerfile.scratch .

docker-build-server:
	@echo Building server Docker image...
	docker build -t fluidity-server -f deployments/server/Dockerfile . || \
	(
		echo Fallback to scratch image build... && \
		$(MAKE) -f Makefile.win build-linux-server && \
		docker build -t fluidity-server -f deployments/server/Dockerfile.scratch .
	)

docker-build-server-scratch: build-linux-server
	@echo Building server Docker image (scratch)...
	docker build -t fluidity-server -f deployments/server/Dockerfile.scratch .
